---
- name: Install and configure WireGuard Debian/Ubuntu
  hosts: localhost
  connection: local
  become: yes

  vars:
    users: 
      - user: "user1"
        ip: "10.0.0.2/32"
      - user: "user2"
        ip: "10.0.0.3/32"
      - user: "user3"
        ip: "10.0.0.4/32"  
    wireguard_interface: wg0
    tables_interface: eth0
    server_ip: "10.0.0.1/24"
    client_ip: "10.0.0.2/32"
    listen_port: 51820
    dns_servers: "10.42.0.1 , 8.8.8.8"
    local_ip: "10.42.0.0/24"
    end_point: "INSERT YOUR ENDPOINT HERE"

  tasks:
    - name: Update apt cache and upgrade packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install WireGuard
      apt:
        name: wireguard
        state: present

    - name: Ensure /etc/wireguard directory exists
      file:
        path: /etc/wireguard
        state: directory
        mode: 0700

    - name: Generate server private key
      command: wg genkey
      register: server_private_key

    - name: Generate server public key
      shell: "echo {{ server_private_key.stdout }} | wg pubkey"
      register: server_public_key
    

    - name: Check if Wireguard Server config file exists
      stat:
        path: /etc/wireguard/wg0.conf
      register: wg0_conf

    - name: Create WireGuard Server configuration file
      template:
        dest: /etc/wireguard/wg0.conf
        src: wg0.conf.j2
        mode: 0600
      when: not wg0_conf.stat.exists

    - name:  Multiple User Generation
      include_tasks: user-generation.yml
      vars:
        user: "{{ item.user }}"
        ip: "{{ item.ip }}"
        publicKey: "{{ server_public_key.stdout }}"
        allowedIPs: "{{ local_ip }}"
        endPoint: "{{ end_point }}:{{ listen_port }}"
        dnsServer: "{{ dns_servers }}"
      with_items: "{{ users }}"
      
    - name: Enable IP forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        reload: yes

    - name: Start and enable WireGuard
      systemd:
        name: wg-quick@{{ wireguard_interface }}
        enabled: yes
        state: started

  handlers:
    - name: restart wireguard
      systemd:
        name: wg-quick@{{ wireguard_interface }}
        state: restarted
